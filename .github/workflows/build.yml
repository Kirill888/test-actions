name: CI

on:
  push:
  pull_request:

jobs:
  mm:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        lib:
        - libs/cloud
        - libs/io
        - libs/stac
        - apps/cloud

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cfg
      id: cfg
      env:
        MM: ${{ matrix.lib }}
      run: |
        pkg="${MM/libs\//odc-}"
        pkg="${pkg/apps\//odc-apps-}"
        tk="pypi_token_${pkg//-/_}"

        echo "MM: __${MM}__"
        echo "Package: ${pkg}, ${tk}"

        echo "::set-output name=pkg::${pkg}"
        echo "::set-output name=tk::${tk}"

    - name: Fake Publish
      env:
        pypi_tk: ${{ secrets[ steps.cfg.outputs.tk ] }}
        pkg: ${{ steps.cfg.outputs.pkg }}
        tk_name: ${{ steps.cfg.outputs.tk }}
      run: |
        echo "pkg: ${pkg} ${tk_name}"
        echo "pypi_tk: ${pypi_tk::3}..${pypi_tk:(-3)}
        echo "pypi_tk: ${pypi_tk}

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Secrets Check
      run: |
        echo "KK_SECRET: ${KK_SECRET}"
        echo "KK_SECRET_: ${KK_SECRET_}"

      env:
        KK_SECRET: ${{ secrets['kk1'] }}
        KK_SECRET_: ${{ secrets.kk1 }}

    - name: Env Dump
      run: |
        find .git/refs
        echo PATH:${PATH}
        env | grep GITHUB_
        echo ==============
        echo ${GITHUB_EVENT_PATH}
        cat ${GITHUB_EVENT_PATH}
        echo
        echo ==============
        env

    - name: Config Stage
      id: cfg
      run: |
        echo PATH:${PATH}
        KK="this is KK $(date)"
        echo "${KK}"

        echo "KK=${KK}" >> $GITHUB_ENV
        echo "::set-output name=kk::${KK}"
        echo "::set-output name=flag::no"
        echo "${GITHUB_WORKSPACE}/.github/workflows/bin" >> $GITHUB_PATH

    - name: List Changed Files
      run: |
        list-changed-files || echo "Force push maybe?"
        echo "....................."
        echo check refs
        find .git/refs -type f

    - name: Work Step
      run: |
        echo "Env variable KK: __${KK}__"
        echo "Output variable kk: __${{ steps.cfg.outputs.kk }}__"
        echo PATH: ${PATH}
        kk-test.sh a1 a2 a3 ${KK}

    - name: Skip Step
      if: steps.cfg.outputs.flag == 'yes'
      run: |
        echo "flag: ${{ steps.cfg.outputs.flag }}"
        echo "Did't skip?"
